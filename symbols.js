// symbol index generated by DDOX - do not edit
var symbols = [
{name: 'std.experimental.xml.cursor', kind: "module", path: './std/experimental/xml/cursor.html', attributes: []},
{name: 'std.experimental.xml.cursor.children', kind: "functiondeclaration", path: './std/experimental/xml/cursor/children.html', attributes: ["auto"]},
{name: 'std.experimental.xml.cursor.CopyingCursor', kind: "structdeclaration", path: './std/experimental/xml/cursor/CopyingCursor.html', attributes: []},
{name: 'std.experimental.xml.cursor.copyingCursor', kind: "functiondeclaration", path: './std/experimental/xml/cursor/copyingCursor.html', attributes: ["auto"]},
{name: 'std.experimental.xml.cursor.Cursor', kind: "structdeclaration", path: './std/experimental/xml/cursor/Cursor.html', attributes: []},
{name: 'std.experimental.xml.cursor.Cursor.atBeginning', kind: "functiondeclaration", path: './std/experimental/xml/cursor/Cursor.atBeginning.html', attributes: []},
{name: 'std.experimental.xml.cursor.Cursor.attributes', kind: "functiondeclaration", path: './std/experimental/xml/cursor/Cursor.attributes.html', attributes: ["auto"]},
{name: 'std.experimental.xml.cursor.Cursor.CharacterType', kind: "aliasdeclaration", path: './std/experimental/xml/cursor/Cursor.CharacterType.html', attributes: []},
{name: 'std.experimental.xml.cursor.Cursor.content', kind: "functiondeclaration", path: './std/experimental/xml/cursor/Cursor.content.html', attributes: []},
{name: 'std.experimental.xml.cursor.Cursor.documentEnd', kind: "functiondeclaration", path: './std/experimental/xml/cursor/Cursor.documentEnd.html', attributes: []},
{name: 'std.experimental.xml.cursor.Cursor.enter', kind: "functiondeclaration", path: './std/experimental/xml/cursor/Cursor.enter.html', attributes: []},
{name: 'std.experimental.xml.cursor.Cursor.exit', kind: "functiondeclaration", path: './std/experimental/xml/cursor/Cursor.exit.html', attributes: []},
{name: 'std.experimental.xml.cursor.Cursor.kind', kind: "functiondeclaration", path: './std/experimental/xml/cursor/Cursor.kind.html', attributes: ["const"]},
{name: 'std.experimental.xml.cursor.Cursor.localName', kind: "functiondeclaration", path: './std/experimental/xml/cursor/Cursor.localName.html', attributes: []},
{name: 'std.experimental.xml.cursor.Cursor.name', kind: "functiondeclaration", path: './std/experimental/xml/cursor/Cursor.name.html', attributes: []},
{name: 'std.experimental.xml.cursor.Cursor.next', kind: "functiondeclaration", path: './std/experimental/xml/cursor/Cursor.next.html', attributes: []},
{name: 'std.experimental.xml.cursor.Cursor.prefix', kind: "functiondeclaration", path: './std/experimental/xml/cursor/Cursor.prefix.html', attributes: []},
{name: 'std.experimental.xml.cursor.Cursor.setErrorHandler', kind: "functiondeclaration", path: './std/experimental/xml/cursor/Cursor.setErrorHandler.html', attributes: []},
{name: 'std.experimental.xml.cursor.Cursor.StringType', kind: "aliasdeclaration", path: './std/experimental/xml/cursor/Cursor.StringType.html', attributes: []},
{name: 'std.experimental.xml.cursor.Cursor.this', kind: "functiondeclaration", path: './std/experimental/xml/cursor/Cursor.this.html', attributes: []},
{name: 'std.experimental.xml.cursor.Cursor.wholeContent', kind: "functiondeclaration", path: './std/experimental/xml/cursor/Cursor.wholeContent.html', attributes: ["const"]},
{name: 'std.experimental.xml.cursor.cursor', kind: "templatedeclaration", path: './std/experimental/xml/cursor/cursor.html', attributes: []},
{name: 'std.experimental.xml.cursor.cursor.cursor', kind: "functiondeclaration", path: './std/experimental/xml/cursor/cursor.cursor.html', attributes: ["auto"]},
{name: 'std.experimental.xml.cursor.CursorError', kind: "enumdeclaration", path: './std/experimental/xml/cursor/CursorError.html', attributes: []},
{name: 'std.experimental.xml.cursor.CursorError.invalidAttributeSyntax', kind: "enummemberdeclaration", path: './std/experimental/xml/cursor/CursorError.invalidAttributeSyntax.html', attributes: []},
{name: 'std.experimental.xml.cursor.CursorError.missingXMLDeclaration', kind: "enummemberdeclaration", path: './std/experimental/xml/cursor/CursorError.missingXMLDeclaration.html', attributes: []},
{name: 'std.experimental.xml.dom', kind: "module", path: './std/experimental/xml/dom.html', attributes: []},
{name: 'std.experimental.xml.dom.Attr', kind: "interfacedeclaration", path: './std/experimental/xml/dom/Attr.html', attributes: []},
{name: 'std.experimental.xml.dom.Attr.isId', kind: "functiondeclaration", path: './std/experimental/xml/dom/Attr.isId.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.Attr.name', kind: "functiondeclaration", path: './std/experimental/xml/dom/Attr.name.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.Attr.ownerElement', kind: "functiondeclaration", path: './std/experimental/xml/dom/Attr.ownerElement.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.Attr.schemaTypeInfo', kind: "functiondeclaration", path: './std/experimental/xml/dom/Attr.schemaTypeInfo.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.Attr.specified', kind: "functiondeclaration", path: './std/experimental/xml/dom/Attr.specified.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.Attr.value', kind: "functiondeclaration", path: './std/experimental/xml/dom/Attr.value.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.CDATASection', kind: "interfacedeclaration", path: './std/experimental/xml/dom/CDATASection.html', attributes: []},
{name: 'std.experimental.xml.dom.CharacterData', kind: "interfacedeclaration", path: './std/experimental/xml/dom/CharacterData.html', attributes: []},
{name: 'std.experimental.xml.dom.CharacterData.appendData', kind: "functiondeclaration", path: './std/experimental/xml/dom/CharacterData.appendData.html', attributes: []},
{name: 'std.experimental.xml.dom.CharacterData.deleteData', kind: "functiondeclaration", path: './std/experimental/xml/dom/CharacterData.deleteData.html', attributes: []},
{name: 'std.experimental.xml.dom.CharacterData.insertData', kind: "functiondeclaration", path: './std/experimental/xml/dom/CharacterData.insertData.html', attributes: []},
{name: 'std.experimental.xml.dom.CharacterData.replaceData', kind: "functiondeclaration", path: './std/experimental/xml/dom/CharacterData.replaceData.html', attributes: []},
{name: 'std.experimental.xml.dom.CharacterData.substringData', kind: "functiondeclaration", path: './std/experimental/xml/dom/CharacterData.substringData.html', attributes: []},
{name: 'std.experimental.xml.dom.Comment', kind: "interfacedeclaration", path: './std/experimental/xml/dom/Comment.html', attributes: []},
{name: 'std.experimental.xml.dom.Document', kind: "interfacedeclaration", path: './std/experimental/xml/dom/Document.html', attributes: []},
{name: 'std.experimental.xml.dom.Document.createAttribute', kind: "functiondeclaration", path: './std/experimental/xml/dom/Document.createAttribute.html', attributes: []},
{name: 'std.experimental.xml.dom.Document.createAttributeNS', kind: "functiondeclaration", path: './std/experimental/xml/dom/Document.createAttributeNS.html', attributes: []},
{name: 'std.experimental.xml.dom.Document.createCDATASection', kind: "functiondeclaration", path: './std/experimental/xml/dom/Document.createCDATASection.html', attributes: []},
{name: 'std.experimental.xml.dom.Document.createComment', kind: "functiondeclaration", path: './std/experimental/xml/dom/Document.createComment.html', attributes: []},
{name: 'std.experimental.xml.dom.Document.createDocumentFragment', kind: "functiondeclaration", path: './std/experimental/xml/dom/Document.createDocumentFragment.html', attributes: []},
{name: 'std.experimental.xml.dom.Document.createElement', kind: "functiondeclaration", path: './std/experimental/xml/dom/Document.createElement.html', attributes: []},
{name: 'std.experimental.xml.dom.Document.createElementNS', kind: "functiondeclaration", path: './std/experimental/xml/dom/Document.createElementNS.html', attributes: []},
{name: 'std.experimental.xml.dom.Document.createEntityReference', kind: "functiondeclaration", path: './std/experimental/xml/dom/Document.createEntityReference.html', attributes: []},
{name: 'std.experimental.xml.dom.Document.createProcessingInstruction', kind: "functiondeclaration", path: './std/experimental/xml/dom/Document.createProcessingInstruction.html', attributes: []},
{name: 'std.experimental.xml.dom.Document.createTextNode', kind: "functiondeclaration", path: './std/experimental/xml/dom/Document.createTextNode.html', attributes: []},
{name: 'std.experimental.xml.dom.Document.doctype', kind: "functiondeclaration", path: './std/experimental/xml/dom/Document.doctype.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.Document.documentElement', kind: "functiondeclaration", path: './std/experimental/xml/dom/Document.documentElement.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.Document.documentURI', kind: "functiondeclaration", path: './std/experimental/xml/dom/Document.documentURI.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.Document.domConfig', kind: "functiondeclaration", path: './std/experimental/xml/dom/Document.domConfig.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.Document.getElementById', kind: "functiondeclaration", path: './std/experimental/xml/dom/Document.getElementById.html', attributes: []},
{name: 'std.experimental.xml.dom.Document.getElementsByTagName', kind: "functiondeclaration", path: './std/experimental/xml/dom/Document.getElementsByTagName.html', attributes: []},
{name: 'std.experimental.xml.dom.Document.getElementsByTagNameNS', kind: "functiondeclaration", path: './std/experimental/xml/dom/Document.getElementsByTagNameNS.html', attributes: []},
{name: 'std.experimental.xml.dom.Document.implementation', kind: "functiondeclaration", path: './std/experimental/xml/dom/Document.implementation.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.Document.importNode', kind: "functiondeclaration", path: './std/experimental/xml/dom/Document.importNode.html', attributes: []},
{name: 'std.experimental.xml.dom.Document.inputEncoding', kind: "functiondeclaration", path: './std/experimental/xml/dom/Document.inputEncoding.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.Document.normalizeDocument', kind: "functiondeclaration", path: './std/experimental/xml/dom/Document.normalizeDocument.html', attributes: []},
{name: 'std.experimental.xml.dom.Document.renameNode', kind: "functiondeclaration", path: './std/experimental/xml/dom/Document.renameNode.html', attributes: []},
{name: 'std.experimental.xml.dom.Document.strictErrorChecking', kind: "functiondeclaration", path: './std/experimental/xml/dom/Document.strictErrorChecking.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.Document.xmlEncoding', kind: "functiondeclaration", path: './std/experimental/xml/dom/Document.xmlEncoding.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.Document.xmlStandalone', kind: "functiondeclaration", path: './std/experimental/xml/dom/Document.xmlStandalone.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.Document.xmlVersion', kind: "functiondeclaration", path: './std/experimental/xml/dom/Document.xmlVersion.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.DocumentFragment', kind: "interfacedeclaration", path: './std/experimental/xml/dom/DocumentFragment.html', attributes: []},
{name: 'std.experimental.xml.dom.DocumentPosition', kind: "enumdeclaration", path: './std/experimental/xml/dom/DocumentPosition.html', attributes: []},
{name: 'std.experimental.xml.dom.DocumentPosition.containedBy', kind: "enummemberdeclaration", path: './std/experimental/xml/dom/DocumentPosition.containedBy.html', attributes: []},
{name: 'std.experimental.xml.dom.DocumentPosition.contains', kind: "enummemberdeclaration", path: './std/experimental/xml/dom/DocumentPosition.contains.html', attributes: []},
{name: 'std.experimental.xml.dom.DocumentPosition.disconnected', kind: "enummemberdeclaration", path: './std/experimental/xml/dom/DocumentPosition.disconnected.html', attributes: []},
{name: 'std.experimental.xml.dom.DocumentPosition.following', kind: "enummemberdeclaration", path: './std/experimental/xml/dom/DocumentPosition.following.html', attributes: []},
{name: 'std.experimental.xml.dom.DocumentPosition.implementationSpecific', kind: "enummemberdeclaration", path: './std/experimental/xml/dom/DocumentPosition.implementationSpecific.html', attributes: []},
{name: 'std.experimental.xml.dom.DocumentPosition.none', kind: "enummemberdeclaration", path: './std/experimental/xml/dom/DocumentPosition.none.html', attributes: []},
{name: 'std.experimental.xml.dom.DocumentPosition.preceding', kind: "enummemberdeclaration", path: './std/experimental/xml/dom/DocumentPosition.preceding.html', attributes: []},
{name: 'std.experimental.xml.dom.DocumentType', kind: "interfacedeclaration", path: './std/experimental/xml/dom/DocumentType.html', attributes: []},
{name: 'std.experimental.xml.dom.DocumentType.entities', kind: "functiondeclaration", path: './std/experimental/xml/dom/DocumentType.entities.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.DocumentType.internalSubset', kind: "functiondeclaration", path: './std/experimental/xml/dom/DocumentType.internalSubset.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.DocumentType.name', kind: "functiondeclaration", path: './std/experimental/xml/dom/DocumentType.name.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.DocumentType.notations', kind: "functiondeclaration", path: './std/experimental/xml/dom/DocumentType.notations.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.DocumentType.publicId', kind: "functiondeclaration", path: './std/experimental/xml/dom/DocumentType.publicId.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.DocumentType.systemId', kind: "functiondeclaration", path: './std/experimental/xml/dom/DocumentType.systemId.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.DOMConfiguration', kind: "interfacedeclaration", path: './std/experimental/xml/dom/DOMConfiguration.html', attributes: []},
{name: 'std.experimental.xml.dom.DOMError', kind: "interfacedeclaration", path: './std/experimental/xml/dom/DOMError.html', attributes: []},
{name: 'std.experimental.xml.dom.DOMException', kind: "classdeclaration", path: './std/experimental/xml/dom/DOMException.html', attributes: []},
{name: 'std.experimental.xml.dom.DOMException.code', kind: "functiondeclaration", path: './std/experimental/xml/dom/DOMException.code.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.DOMException.this', kind: "functiondeclaration", path: './std/experimental/xml/dom/DOMException.this.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.experimental.xml.dom.DOMImplementation', kind: "interfacedeclaration", path: './std/experimental/xml/dom/DOMImplementation.html', attributes: []},
{name: 'std.experimental.xml.dom.DOMImplementation.createDocument', kind: "functiondeclaration", path: './std/experimental/xml/dom/DOMImplementation.createDocument.html', attributes: []},
{name: 'std.experimental.xml.dom.DOMImplementation.createDocumentType', kind: "functiondeclaration", path: './std/experimental/xml/dom/DOMImplementation.createDocumentType.html', attributes: []},
{name: 'std.experimental.xml.dom.DOMImplementationList', kind: "interfacedeclaration", path: './std/experimental/xml/dom/DOMImplementationList.html', attributes: []},
{name: 'std.experimental.xml.dom.DOMImplementationSource', kind: "interfacedeclaration", path: './std/experimental/xml/dom/DOMImplementationSource.html', attributes: []},
{name: 'std.experimental.xml.dom.DOMImplementationSource.getDOMImplementation', kind: "functiondeclaration", path: './std/experimental/xml/dom/DOMImplementationSource.getDOMImplementation.html', attributes: []},
{name: 'std.experimental.xml.dom.DOMImplementationSource.getDOMImplementationList', kind: "functiondeclaration", path: './std/experimental/xml/dom/DOMImplementationSource.getDOMImplementationList.html', attributes: []},
{name: 'std.experimental.xml.dom.DOMLocator', kind: "interfacedeclaration", path: './std/experimental/xml/dom/DOMLocator.html', attributes: []},
{name: 'std.experimental.xml.dom.DOMStringList', kind: "interfacedeclaration", path: './std/experimental/xml/dom/DOMStringList.html', attributes: []},
{name: 'std.experimental.xml.dom.Entity', kind: "interfacedeclaration", path: './std/experimental/xml/dom/Entity.html', attributes: []},
{name: 'std.experimental.xml.dom.Entity.inputEncoding', kind: "functiondeclaration", path: './std/experimental/xml/dom/Entity.inputEncoding.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.Entity.notationName', kind: "functiondeclaration", path: './std/experimental/xml/dom/Entity.notationName.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.Entity.publicId', kind: "functiondeclaration", path: './std/experimental/xml/dom/Entity.publicId.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.Entity.systemId', kind: "functiondeclaration", path: './std/experimental/xml/dom/Entity.systemId.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.Entity.xmlEncoding', kind: "functiondeclaration", path: './std/experimental/xml/dom/Entity.xmlEncoding.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.Entity.xmlVersion', kind: "functiondeclaration", path: './std/experimental/xml/dom/Entity.xmlVersion.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.EntityReference', kind: "interfacedeclaration", path: './std/experimental/xml/dom/EntityReference.html', attributes: []},
{name: 'std.experimental.xml.dom.ErrorSeverity', kind: "enumdeclaration", path: './std/experimental/xml/dom/ErrorSeverity.html', attributes: []},
{name: 'std.experimental.xml.dom.ErrorSeverity.error', kind: "enummemberdeclaration", path: './std/experimental/xml/dom/ErrorSeverity.error.html', attributes: []},
{name: 'std.experimental.xml.dom.ErrorSeverity.fatalError', kind: "enummemberdeclaration", path: './std/experimental/xml/dom/ErrorSeverity.fatalError.html', attributes: []},
{name: 'std.experimental.xml.dom.ErrorSeverity.warning', kind: "enummemberdeclaration", path: './std/experimental/xml/dom/ErrorSeverity.warning.html', attributes: []},
{name: 'std.experimental.xml.dom.ExceptionCode', kind: "enumdeclaration", path: './std/experimental/xml/dom/ExceptionCode.html', attributes: []},
{name: 'std.experimental.xml.dom.ExceptionCode.domStringSize', kind: "enummemberdeclaration", path: './std/experimental/xml/dom/ExceptionCode.domStringSize.html', attributes: []},
{name: 'std.experimental.xml.dom.ExceptionCode.hierarchyRequest', kind: "enummemberdeclaration", path: './std/experimental/xml/dom/ExceptionCode.hierarchyRequest.html', attributes: []},
{name: 'std.experimental.xml.dom.ExceptionCode.indexSize', kind: "enummemberdeclaration", path: './std/experimental/xml/dom/ExceptionCode.indexSize.html', attributes: []},
{name: 'std.experimental.xml.dom.ExceptionCode.inuseAttribute', kind: "enummemberdeclaration", path: './std/experimental/xml/dom/ExceptionCode.inuseAttribute.html', attributes: []},
{name: 'std.experimental.xml.dom.ExceptionCode.invalidAccess', kind: "enummemberdeclaration", path: './std/experimental/xml/dom/ExceptionCode.invalidAccess.html', attributes: []},
{name: 'std.experimental.xml.dom.ExceptionCode.invalidCharacter', kind: "enummemberdeclaration", path: './std/experimental/xml/dom/ExceptionCode.invalidCharacter.html', attributes: []},
{name: 'std.experimental.xml.dom.ExceptionCode.invalidModification', kind: "enummemberdeclaration", path: './std/experimental/xml/dom/ExceptionCode.invalidModification.html', attributes: []},
{name: 'std.experimental.xml.dom.ExceptionCode.invalidState', kind: "enummemberdeclaration", path: './std/experimental/xml/dom/ExceptionCode.invalidState.html', attributes: []},
{name: 'std.experimental.xml.dom.ExceptionCode.namespace', kind: "enummemberdeclaration", path: './std/experimental/xml/dom/ExceptionCode.namespace.html', attributes: []},
{name: 'std.experimental.xml.dom.ExceptionCode.noDataAllowed', kind: "enummemberdeclaration", path: './std/experimental/xml/dom/ExceptionCode.noDataAllowed.html', attributes: []},
{name: 'std.experimental.xml.dom.ExceptionCode.noModificationAllowed', kind: "enummemberdeclaration", path: './std/experimental/xml/dom/ExceptionCode.noModificationAllowed.html', attributes: []},
{name: 'std.experimental.xml.dom.ExceptionCode.notFound', kind: "enummemberdeclaration", path: './std/experimental/xml/dom/ExceptionCode.notFound.html', attributes: []},
{name: 'std.experimental.xml.dom.ExceptionCode.notSupported', kind: "enummemberdeclaration", path: './std/experimental/xml/dom/ExceptionCode.notSupported.html', attributes: []},
{name: 'std.experimental.xml.dom.ExceptionCode.syntax', kind: "enummemberdeclaration", path: './std/experimental/xml/dom/ExceptionCode.syntax.html', attributes: []},
{name: 'std.experimental.xml.dom.ExceptionCode.typeMismatch', kind: "enummemberdeclaration", path: './std/experimental/xml/dom/ExceptionCode.typeMismatch.html', attributes: []},
{name: 'std.experimental.xml.dom.ExceptionCode.validation', kind: "enummemberdeclaration", path: './std/experimental/xml/dom/ExceptionCode.validation.html', attributes: []},
{name: 'std.experimental.xml.dom.ExceptionCode.wrongDocument', kind: "enummemberdeclaration", path: './std/experimental/xml/dom/ExceptionCode.wrongDocument.html', attributes: []},
{name: 'std.experimental.xml.dom.NamedNodeMap', kind: "interfacedeclaration", path: './std/experimental/xml/dom/NamedNodeMap.html', attributes: []},
{name: 'std.experimental.xml.dom.NamedNodeMap.getNamedItem', kind: "functiondeclaration", path: './std/experimental/xml/dom/NamedNodeMap.getNamedItem.html', attributes: []},
{name: 'std.experimental.xml.dom.NamedNodeMap.getNamedItemNS', kind: "functiondeclaration", path: './std/experimental/xml/dom/NamedNodeMap.getNamedItemNS.html', attributes: []},
{name: 'std.experimental.xml.dom.NamedNodeMap.item', kind: "functiondeclaration", path: './std/experimental/xml/dom/NamedNodeMap.item.html', attributes: []},
{name: 'std.experimental.xml.dom.NamedNodeMap.length', kind: "functiondeclaration", path: './std/experimental/xml/dom/NamedNodeMap.length.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.NamedNodeMap.removeNamedItem', kind: "functiondeclaration", path: './std/experimental/xml/dom/NamedNodeMap.removeNamedItem.html', attributes: []},
{name: 'std.experimental.xml.dom.NamedNodeMap.removeNamedItemNS', kind: "functiondeclaration", path: './std/experimental/xml/dom/NamedNodeMap.removeNamedItemNS.html', attributes: []},
{name: 'std.experimental.xml.dom.NamedNodeMap.setNamedItem', kind: "functiondeclaration", path: './std/experimental/xml/dom/NamedNodeMap.setNamedItem.html', attributes: []},
{name: 'std.experimental.xml.dom.NamedNodeMap.setNamedItemNS', kind: "functiondeclaration", path: './std/experimental/xml/dom/NamedNodeMap.setNamedItemNS.html', attributes: []},
{name: 'std.experimental.xml.dom.Node', kind: "interfacedeclaration", path: './std/experimental/xml/dom/Node.html', attributes: []},
{name: 'std.experimental.xml.dom.Node.attributes', kind: "functiondeclaration", path: './std/experimental/xml/dom/Node.attributes.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.Node.baseURI', kind: "functiondeclaration", path: './std/experimental/xml/dom/Node.baseURI.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.Node.childNodes', kind: "functiondeclaration", path: './std/experimental/xml/dom/Node.childNodes.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.Node.cloneNode', kind: "functiondeclaration", path: './std/experimental/xml/dom/Node.cloneNode.html', attributes: []},
{name: 'std.experimental.xml.dom.Node.compareDocumentPosition', kind: "functiondeclaration", path: './std/experimental/xml/dom/Node.compareDocumentPosition.html', attributes: []},
{name: 'std.experimental.xml.dom.Node.firstChild', kind: "functiondeclaration", path: './std/experimental/xml/dom/Node.firstChild.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.Node.getUserData', kind: "functiondeclaration", path: './std/experimental/xml/dom/Node.getUserData.html', attributes: []},
{name: 'std.experimental.xml.dom.Node.hasAttributes', kind: "functiondeclaration", path: './std/experimental/xml/dom/Node.hasAttributes.html', attributes: []},
{name: 'std.experimental.xml.dom.Node.hasChildNodes', kind: "functiondeclaration", path: './std/experimental/xml/dom/Node.hasChildNodes.html', attributes: []},
{name: 'std.experimental.xml.dom.Node.insertBefore', kind: "functiondeclaration", path: './std/experimental/xml/dom/Node.insertBefore.html', attributes: []},
{name: 'std.experimental.xml.dom.Node.isDefaultNamespace', kind: "functiondeclaration", path: './std/experimental/xml/dom/Node.isDefaultNamespace.html', attributes: []},
{name: 'std.experimental.xml.dom.Node.isSupported', kind: "functiondeclaration", path: './std/experimental/xml/dom/Node.isSupported.html', attributes: []},
{name: 'std.experimental.xml.dom.Node.lastChild', kind: "functiondeclaration", path: './std/experimental/xml/dom/Node.lastChild.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.Node.localName', kind: "functiondeclaration", path: './std/experimental/xml/dom/Node.localName.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.Node.lookupNamespaceURI', kind: "functiondeclaration", path: './std/experimental/xml/dom/Node.lookupNamespaceURI.html', attributes: []},
{name: 'std.experimental.xml.dom.Node.lookupPrefix', kind: "functiondeclaration", path: './std/experimental/xml/dom/Node.lookupPrefix.html', attributes: []},
{name: 'std.experimental.xml.dom.Node.namespaceURI', kind: "functiondeclaration", path: './std/experimental/xml/dom/Node.namespaceURI.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.Node.nextSibling', kind: "functiondeclaration", path: './std/experimental/xml/dom/Node.nextSibling.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.Node.nodeName', kind: "functiondeclaration", path: './std/experimental/xml/dom/Node.nodeName.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.Node.nodeType', kind: "functiondeclaration", path: './std/experimental/xml/dom/Node.nodeType.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.Node.nodeValue', kind: "functiondeclaration", path: './std/experimental/xml/dom/Node.nodeValue.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.Node.normalize', kind: "functiondeclaration", path: './std/experimental/xml/dom/Node.normalize.html', attributes: []},
{name: 'std.experimental.xml.dom.Node.ownerDocument', kind: "functiondeclaration", path: './std/experimental/xml/dom/Node.ownerDocument.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.Node.parentNode', kind: "functiondeclaration", path: './std/experimental/xml/dom/Node.parentNode.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.Node.prefix', kind: "functiondeclaration", path: './std/experimental/xml/dom/Node.prefix.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.Node.previousSibling', kind: "functiondeclaration", path: './std/experimental/xml/dom/Node.previousSibling.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.Node.removeChild', kind: "functiondeclaration", path: './std/experimental/xml/dom/Node.removeChild.html', attributes: []},
{name: 'std.experimental.xml.dom.Node.replaceChild', kind: "functiondeclaration", path: './std/experimental/xml/dom/Node.replaceChild.html', attributes: []},
{name: 'std.experimental.xml.dom.Node.setUserData', kind: "functiondeclaration", path: './std/experimental/xml/dom/Node.setUserData.html', attributes: []},
{name: 'std.experimental.xml.dom.NodeList', kind: "interfacedeclaration", path: './std/experimental/xml/dom/NodeList.html', attributes: []},
{name: 'std.experimental.xml.dom.NodeList.item', kind: "functiondeclaration", path: './std/experimental/xml/dom/NodeList.item.html', attributes: []},
{name: 'std.experimental.xml.dom.NodeList.length', kind: "functiondeclaration", path: './std/experimental/xml/dom/NodeList.length.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.NodeType', kind: "enumdeclaration", path: './std/experimental/xml/dom/NodeType.html', attributes: []},
{name: 'std.experimental.xml.dom.Notation', kind: "interfacedeclaration", path: './std/experimental/xml/dom/Notation.html', attributes: []},
{name: 'std.experimental.xml.dom.Notation.publicId', kind: "functiondeclaration", path: './std/experimental/xml/dom/Notation.publicId.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.Notation.systemId', kind: "functiondeclaration", path: './std/experimental/xml/dom/Notation.systemId.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.ProcessingInstruction', kind: "interfacedeclaration", path: './std/experimental/xml/dom/ProcessingInstruction.html', attributes: []},
{name: 'std.experimental.xml.dom.ProcessingInstruction.data', kind: "functiondeclaration", path: './std/experimental/xml/dom/ProcessingInstruction.data.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.ProcessingInstruction.target', kind: "functiondeclaration", path: './std/experimental/xml/dom/ProcessingInstruction.target.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.Text', kind: "interfacedeclaration", path: './std/experimental/xml/dom/Text.html', attributes: []},
{name: 'std.experimental.xml.dom.Text.isElementContentWhitespace', kind: "functiondeclaration", path: './std/experimental/xml/dom/Text.isElementContentWhitespace.html', attributes: ["property"]},
{name: 'std.experimental.xml.dom.Text.splitText', kind: "functiondeclaration", path: './std/experimental/xml/dom/Text.splitText.html', attributes: []},
{name: 'std.experimental.xml.dom.UserData', kind: "aliasdeclaration", path: './std/experimental/xml/dom/UserData.html', attributes: []},
{name: 'std.experimental.xml.dom.UserDataHandler', kind: "aliasdeclaration", path: './std/experimental/xml/dom/UserDataHandler.html', attributes: []},
{name: 'std.experimental.xml.dom.UserDataOperation', kind: "enumdeclaration", path: './std/experimental/xml/dom/UserDataOperation.html', attributes: []},
{name: 'std.experimental.xml.dom.UserDataOperation.nodeAdopted', kind: "enummemberdeclaration", path: './std/experimental/xml/dom/UserDataOperation.nodeAdopted.html', attributes: []},
{name: 'std.experimental.xml.dom.UserDataOperation.nodeCloned', kind: "enummemberdeclaration", path: './std/experimental/xml/dom/UserDataOperation.nodeCloned.html', attributes: []},
{name: 'std.experimental.xml.dom.UserDataOperation.nodeDeleted', kind: "enummemberdeclaration", path: './std/experimental/xml/dom/UserDataOperation.nodeDeleted.html', attributes: []},
{name: 'std.experimental.xml.dom.UserDataOperation.nodeImported', kind: "enummemberdeclaration", path: './std/experimental/xml/dom/UserDataOperation.nodeImported.html', attributes: []},
{name: 'std.experimental.xml.dom.UserDataOperation.nodeRenamed', kind: "enummemberdeclaration", path: './std/experimental/xml/dom/UserDataOperation.nodeRenamed.html', attributes: []},
{name: 'std.experimental.xml.dom.XMLTypeInfo', kind: "interfacedeclaration", path: './std/experimental/xml/dom/XMLTypeInfo.html', attributes: []},
{name: 'std.experimental.xml.domimpl', kind: "module", path: './std/experimental/xml/domimpl.html', attributes: []},
{name: 'std.experimental.xml.domimpl.domBuilder', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/domBuilder.html', attributes: ["auto"]},
{name: 'std.experimental.xml.domimpl.DOMImplementation', kind: "classdeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.html', attributes: []},
{name: 'std.experimental.xml.domimpl.DOMImplementation.Attr', kind: "classdeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.Attr.html', attributes: []},
{name: 'std.experimental.xml.domimpl.DOMImplementation.Attr.isId', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.Attr.isId.html', attributes: ["property"]},
{name: 'std.experimental.xml.domimpl.DOMImplementation.Attr.name', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.Attr.name.html', attributes: ["property"]},
{name: 'std.experimental.xml.domimpl.DOMImplementation.Attr.ownerElement', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.Attr.ownerElement.html', attributes: ["property"]},
{name: 'std.experimental.xml.domimpl.DOMImplementation.Attr.schemaTypeInfo', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.Attr.schemaTypeInfo.html', attributes: ["property"]},
{name: 'std.experimental.xml.domimpl.DOMImplementation.Attr.specified', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.Attr.specified.html', attributes: ["property"]},
{name: 'std.experimental.xml.domimpl.DOMImplementation.Attr.value', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.Attr.value.html', attributes: ["property"]},
{name: 'std.experimental.xml.domimpl.DOMImplementation.CDATASection', kind: "classdeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.CDATASection.html', attributes: []},
{name: 'std.experimental.xml.domimpl.DOMImplementation.CharacterData', kind: "classdeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.CharacterData.html', attributes: []},
{name: 'std.experimental.xml.domimpl.DOMImplementation.Comment', kind: "classdeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.Comment.html', attributes: []},
{name: 'std.experimental.xml.domimpl.DOMImplementation.createDocument', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.createDocument.html', attributes: []},
{name: 'std.experimental.xml.domimpl.DOMImplementation.createDocumentType', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.createDocumentType.html', attributes: []},
{name: 'std.experimental.xml.domimpl.DOMImplementation.Document', kind: "classdeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.Document.html', attributes: []},
{name: 'std.experimental.xml.domimpl.DOMImplementation.DocumentFragment', kind: "classdeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.DocumentFragment.html', attributes: []},
{name: 'std.experimental.xml.domimpl.DOMImplementation.DocumentType', kind: "classdeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.DocumentType.html', attributes: []},
{name: 'std.experimental.xml.domimpl.DOMImplementation.DocumentType.entities', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.DocumentType.entities.html', attributes: ["property"]},
{name: 'std.experimental.xml.domimpl.DOMImplementation.DocumentType.internalSubset', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.DocumentType.internalSubset.html', attributes: ["property"]},
{name: 'std.experimental.xml.domimpl.DOMImplementation.DocumentType.name', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.DocumentType.name.html', attributes: ["property"]},
{name: 'std.experimental.xml.domimpl.DOMImplementation.DocumentType.notations', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.DocumentType.notations.html', attributes: ["property"]},
{name: 'std.experimental.xml.domimpl.DOMImplementation.DocumentType.publicId', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.DocumentType.publicId.html', attributes: ["property"]},
{name: 'std.experimental.xml.domimpl.DOMImplementation.DocumentType.systemId', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.DocumentType.systemId.html', attributes: ["property"]},
{name: 'std.experimental.xml.domimpl.DOMImplementation.DOMConfiguration', kind: "classdeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.DOMConfiguration.html', attributes: []},
{name: 'std.experimental.xml.domimpl.DOMImplementation.DOMConfiguration.canSetParameter', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.DOMConfiguration.canSetParameter.html', attributes: []},
{name: 'std.experimental.xml.domimpl.DOMImplementation.DOMConfiguration.getParameter', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.DOMConfiguration.getParameter.html', attributes: []},
{name: 'std.experimental.xml.domimpl.DOMImplementation.DOMConfiguration.parameterNames', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.DOMConfiguration.parameterNames.html', attributes: ["property"]},
{name: 'std.experimental.xml.domimpl.DOMImplementation.DOMConfiguration.setParameter', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.DOMConfiguration.setParameter.html', attributes: []},
{name: 'std.experimental.xml.domimpl.DOMImplementation.DOMException', kind: "classdeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.DOMException.html', attributes: []},
{name: 'std.experimental.xml.domimpl.DOMImplementation.DOMException.code', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.DOMException.code.html', attributes: ["property", "override"]},
{name: 'std.experimental.xml.domimpl.DOMImplementation.DOMException.this', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.DOMException.this.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.experimental.xml.domimpl.DOMImplementation.Element', kind: "classdeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.Element.html', attributes: []},
{name: 'std.experimental.xml.domimpl.DOMImplementation.Element.getAttribute', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.Element.getAttribute.html', attributes: []},
{name: 'std.experimental.xml.domimpl.DOMImplementation.Element.getAttributeNode', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.Element.getAttributeNode.html', attributes: []},
{name: 'std.experimental.xml.domimpl.DOMImplementation.Element.getAttributeNodeNS', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.Element.getAttributeNodeNS.html', attributes: []},
{name: 'std.experimental.xml.domimpl.DOMImplementation.Element.getAttributeNS', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.Element.getAttributeNS.html', attributes: []},
{name: 'std.experimental.xml.domimpl.DOMImplementation.Element.getElementsByTagName', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.Element.getElementsByTagName.html', attributes: []},
{name: 'std.experimental.xml.domimpl.DOMImplementation.Element.getElementsByTagNameNS', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.Element.getElementsByTagNameNS.html', attributes: []},
{name: 'std.experimental.xml.domimpl.DOMImplementation.Element.hasAttribute', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.Element.hasAttribute.html', attributes: []},
{name: 'std.experimental.xml.domimpl.DOMImplementation.Element.hasAttributeNS', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.Element.hasAttributeNS.html', attributes: []},
{name: 'std.experimental.xml.domimpl.DOMImplementation.Element.removeAttribute', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.Element.removeAttribute.html', attributes: []},
{name: 'std.experimental.xml.domimpl.DOMImplementation.Element.removeAttributeNode', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.Element.removeAttributeNode.html', attributes: []},
{name: 'std.experimental.xml.domimpl.DOMImplementation.Element.removeAttributeNS', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.Element.removeAttributeNS.html', attributes: []},
{name: 'std.experimental.xml.domimpl.DOMImplementation.Element.schemaTypeInfo', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.Element.schemaTypeInfo.html', attributes: ["property"]},
{name: 'std.experimental.xml.domimpl.DOMImplementation.Element.setAttribute', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.Element.setAttribute.html', attributes: []},
{name: 'std.experimental.xml.domimpl.DOMImplementation.Element.setAttributeNode', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.Element.setAttributeNode.html', attributes: []},
{name: 'std.experimental.xml.domimpl.DOMImplementation.Element.setAttributeNodeNS', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.Element.setAttributeNodeNS.html', attributes: []},
{name: 'std.experimental.xml.domimpl.DOMImplementation.Element.setAttributeNS', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.Element.setAttributeNS.html', attributes: []},
{name: 'std.experimental.xml.domimpl.DOMImplementation.Element.setIdAttribute', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.Element.setIdAttribute.html', attributes: []},
{name: 'std.experimental.xml.domimpl.DOMImplementation.Element.setIdAttributeNode', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.Element.setIdAttributeNode.html', attributes: []},
{name: 'std.experimental.xml.domimpl.DOMImplementation.Element.setIdAttributeNS', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.Element.setIdAttributeNS.html', attributes: []},
{name: 'std.experimental.xml.domimpl.DOMImplementation.Element.tagName', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.Element.tagName.html', attributes: ["property"]},
{name: 'std.experimental.xml.domimpl.DOMImplementation.EntityReference', kind: "classdeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.EntityReference.html', attributes: []},
{name: 'std.experimental.xml.domimpl.DOMImplementation.getFeature', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.getFeature.html', attributes: []},
{name: 'std.experimental.xml.domimpl.DOMImplementation.hasFeature', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.hasFeature.html', attributes: []},
{name: 'std.experimental.xml.domimpl.DOMImplementation.Node', kind: "classdeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.Node.html', attributes: []},
{name: 'std.experimental.xml.domimpl.DOMImplementation.Node.compareDocumentPosition', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.Node.compareDocumentPosition.html', attributes: []},
{name: 'std.experimental.xml.domimpl.DOMImplementation.Node.getFeature', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.Node.getFeature.html', attributes: []},
{name: 'std.experimental.xml.domimpl.DOMImplementation.Node.getUserData', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.Node.getUserData.html', attributes: ["const"]},
{name: 'std.experimental.xml.domimpl.DOMImplementation.Node.isEqualNode', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.Node.isEqualNode.html', attributes: []},
{name: 'std.experimental.xml.domimpl.DOMImplementation.Node.isSameNode', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.Node.isSameNode.html', attributes: []},
{name: 'std.experimental.xml.domimpl.DOMImplementation.Node.isSupported', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.Node.isSupported.html', attributes: []},
{name: 'std.experimental.xml.domimpl.DOMImplementation.Node.nextSibling', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.Node.nextSibling.html', attributes: ["property"]},
{name: 'std.experimental.xml.domimpl.DOMImplementation.Node.ownerDocument', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.Node.ownerDocument.html', attributes: ["property"]},
{name: 'std.experimental.xml.domimpl.DOMImplementation.Node.parentNode', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.Node.parentNode.html', attributes: ["property"]},
{name: 'std.experimental.xml.domimpl.DOMImplementation.Node.previousSibling', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.Node.previousSibling.html', attributes: ["property"]},
{name: 'std.experimental.xml.domimpl.DOMImplementation.Node.readonly', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.Node.readonly.html', attributes: ["property"]},
{name: 'std.experimental.xml.domimpl.DOMImplementation.Node.setUserData', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.Node.setUserData.html', attributes: []},
{name: 'std.experimental.xml.domimpl.DOMImplementation.ProcessingInstruction', kind: "classdeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.ProcessingInstruction.html', attributes: []},
{name: 'std.experimental.xml.domimpl.DOMImplementation.ProcessingInstruction.data', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.ProcessingInstruction.data.html', attributes: ["property"]},
{name: 'std.experimental.xml.domimpl.DOMImplementation.ProcessingInstruction.target', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.ProcessingInstruction.target.html', attributes: ["property"]},
{name: 'std.experimental.xml.domimpl.DOMImplementation.Text', kind: "classdeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.Text.html', attributes: []},
{name: 'std.experimental.xml.domimpl.DOMImplementation.Text.isElementContentWhitespace', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.Text.isElementContentWhitespace.html', attributes: ["property"]},
{name: 'std.experimental.xml.domimpl.DOMImplementation.Text.replaceWholeText', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.Text.replaceWholeText.html', attributes: ["property"]},
{name: 'std.experimental.xml.domimpl.DOMImplementation.Text.splitText', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.Text.splitText.html', attributes: []},
{name: 'std.experimental.xml.domimpl.DOMImplementation.Text.wholeText', kind: "functiondeclaration", path: './std/experimental/xml/domimpl/DOMImplementation.Text.wholeText.html', attributes: ["property"]},
{name: 'std.experimental.xml.domparser', kind: "module", path: './std/experimental/xml/domparser.html', attributes: []},
{name: 'std.experimental.xml.domparser.DOMBuilder', kind: "structdeclaration", path: './std/experimental/xml/domparser/DOMBuilder.html', attributes: []},
{name: 'std.experimental.xml.domparser.DOMBuilder.build', kind: "functiondeclaration", path: './std/experimental/xml/domparser/DOMBuilder.build.html', attributes: []},
{name: 'std.experimental.xml.domparser.DOMBuilder.buildRecursive', kind: "functiondeclaration", path: './std/experimental/xml/domparser/DOMBuilder.buildRecursive.html', attributes: []},
{name: 'std.experimental.xml.domparser.DOMBuilder.cursor', kind: "variabledeclaration", path: './std/experimental/xml/domparser/DOMBuilder.cursor.html', attributes: []},
{name: 'std.experimental.xml.domparser.DOMBuilder.enter', kind: "functiondeclaration", path: './std/experimental/xml/domparser/DOMBuilder.enter.html', attributes: []},
{name: 'std.experimental.xml.domparser.DOMBuilder.exit', kind: "functiondeclaration", path: './std/experimental/xml/domparser/DOMBuilder.exit.html', attributes: []},
{name: 'std.experimental.xml.domparser.DOMBuilder.getDocument', kind: "functiondeclaration", path: './std/experimental/xml/domparser/DOMBuilder.getDocument.html', attributes: ["auto"]},
{name: 'std.experimental.xml.domparser.DOMBuilder.next', kind: "functiondeclaration", path: './std/experimental/xml/domparser/DOMBuilder.next.html', attributes: []},
{name: 'std.experimental.xml.domparser.DOMBuilder.setSource', kind: "functiondeclaration", path: './std/experimental/xml/domparser/DOMBuilder.setSource.html', attributes: []},
{name: 'std.experimental.xml.domparser.domBuilder', kind: "functiondeclaration", path: './std/experimental/xml/domparser/domBuilder.html', attributes: ["auto"]},
{name: 'std.experimental.xml.dtd', kind: "module", path: './std/experimental/xml/dtd.html', attributes: []},
{name: 'std.experimental.xml.faststrings', kind: "module", path: './std/experimental/xml/faststrings.html', attributes: []},
{name: 'std.experimental.xml.faststrings.xmlEscape', kind: "functiondeclaration", path: './std/experimental/xml/faststrings/xmlEscape.html', attributes: []},
{name: 'std.experimental.xml.faststrings.xmlEscapedWrite', kind: "functiondeclaration", path: './std/experimental/xml/faststrings/xmlEscapedWrite.html', attributes: []},
{name: 'std.experimental.xml.faststrings.xmlUnescape', kind: "functiondeclaration", path: './std/experimental/xml/faststrings/xmlUnescape.html', attributes: []},
{name: 'std.experimental.xml.faststrings.xmlUnescapedWrite', kind: "functiondeclaration", path: './std/experimental/xml/faststrings/xmlUnescapedWrite.html', attributes: []},
{name: 'std.experimental.xml.interfaces', kind: "module", path: './std/experimental/xml/interfaces.html', attributes: []},
{name: 'std.experimental.xml.interfaces.isCursor', kind: "enummemberdeclaration", path: './std/experimental/xml/interfaces/isCursor.html', attributes: []},
{name: 'std.experimental.xml.interfaces.isLexer', kind: "enummemberdeclaration", path: './std/experimental/xml/interfaces/isLexer.html', attributes: []},
{name: 'std.experimental.xml.interfaces.isLowLevelParser', kind: "enummemberdeclaration", path: './std/experimental/xml/interfaces/isLowLevelParser.html', attributes: []},
{name: 'std.experimental.xml.interfaces.isSaveableCursor', kind: "enummemberdeclaration", path: './std/experimental/xml/interfaces/isSaveableCursor.html', attributes: []},
{name: 'std.experimental.xml.interfaces.isSaveableLexer', kind: "enummemberdeclaration", path: './std/experimental/xml/interfaces/isSaveableLexer.html', attributes: []},
{name: 'std.experimental.xml.interfaces.isSaveableLowLevelParser', kind: "enummemberdeclaration", path: './std/experimental/xml/interfaces/isSaveableLowLevelParser.html', attributes: []},
{name: 'std.experimental.xml.interfaces.XMLException', kind: "classdeclaration", path: './std/experimental/xml/interfaces/XMLException.html', attributes: []},
{name: 'std.experimental.xml.interfaces.XMLKind', kind: "enumdeclaration", path: './std/experimental/xml/interfaces/XMLKind.html', attributes: []},
{name: 'std.experimental.xml.interfaces.XMLKind.attlistDecl', kind: "enummemberdeclaration", path: './std/experimental/xml/interfaces/XMLKind.attlistDecl.html', attributes: []},
{name: 'std.experimental.xml.interfaces.XMLKind.cdata', kind: "enummemberdeclaration", path: './std/experimental/xml/interfaces/XMLKind.cdata.html', attributes: []},
{name: 'std.experimental.xml.interfaces.XMLKind.comment', kind: "enummemberdeclaration", path: './std/experimental/xml/interfaces/XMLKind.comment.html', attributes: []},
{name: 'std.experimental.xml.interfaces.XMLKind.conditional', kind: "enummemberdeclaration", path: './std/experimental/xml/interfaces/XMLKind.conditional.html', attributes: []},
{name: 'std.experimental.xml.interfaces.XMLKind.declaration', kind: "enummemberdeclaration", path: './std/experimental/xml/interfaces/XMLKind.declaration.html', attributes: []},
{name: 'std.experimental.xml.interfaces.XMLKind.document', kind: "enummemberdeclaration", path: './std/experimental/xml/interfaces/XMLKind.document.html', attributes: []},
{name: 'std.experimental.xml.interfaces.XMLKind.dtdEmpty', kind: "enummemberdeclaration", path: './std/experimental/xml/interfaces/XMLKind.dtdEmpty.html', attributes: []},
{name: 'std.experimental.xml.interfaces.XMLKind.dtdEnd', kind: "enummemberdeclaration", path: './std/experimental/xml/interfaces/XMLKind.dtdEnd.html', attributes: []},
{name: 'std.experimental.xml.interfaces.XMLKind.dtdStart', kind: "enummemberdeclaration", path: './std/experimental/xml/interfaces/XMLKind.dtdStart.html', attributes: []},
{name: 'std.experimental.xml.interfaces.XMLKind.elementDecl', kind: "enummemberdeclaration", path: './std/experimental/xml/interfaces/XMLKind.elementDecl.html', attributes: []},
{name: 'std.experimental.xml.interfaces.XMLKind.elementEmpty', kind: "enummemberdeclaration", path: './std/experimental/xml/interfaces/XMLKind.elementEmpty.html', attributes: []},
{name: 'std.experimental.xml.interfaces.XMLKind.elementEnd', kind: "enummemberdeclaration", path: './std/experimental/xml/interfaces/XMLKind.elementEnd.html', attributes: []},
{name: 'std.experimental.xml.interfaces.XMLKind.elementStart', kind: "enummemberdeclaration", path: './std/experimental/xml/interfaces/XMLKind.elementStart.html', attributes: []},
{name: 'std.experimental.xml.interfaces.XMLKind.entityDecl', kind: "enummemberdeclaration", path: './std/experimental/xml/interfaces/XMLKind.entityDecl.html', attributes: []},
{name: 'std.experimental.xml.interfaces.XMLKind.notationDecl', kind: "enummemberdeclaration", path: './std/experimental/xml/interfaces/XMLKind.notationDecl.html', attributes: []},
{name: 'std.experimental.xml.interfaces.XMLKind.processingInstruction', kind: "enummemberdeclaration", path: './std/experimental/xml/interfaces/XMLKind.processingInstruction.html', attributes: []},
{name: 'std.experimental.xml.interfaces.XMLKind.text', kind: "enummemberdeclaration", path: './std/experimental/xml/interfaces/XMLKind.text.html', attributes: []},
{name: 'std.experimental.xml.legacy', kind: "module", path: './std/experimental/xml/legacy.html', attributes: []},
{name: 'std.experimental.xml.lexers', kind: "module", path: './std/experimental/xml/lexers.html', attributes: []},
{name: 'std.experimental.xml.lexers.BufferedLexer', kind: "structdeclaration", path: './std/experimental/xml/lexers/BufferedLexer.html', attributes: []},
{name: 'std.experimental.xml.lexers.BufferedLexer.advanceUntil', kind: "functiondeclaration", path: './std/experimental/xml/lexers/BufferedLexer.advanceUntil.html', attributes: []},
{name: 'std.experimental.xml.lexers.BufferedLexer.advanceUntilAny', kind: "functiondeclaration", path: './std/experimental/xml/lexers/BufferedLexer.advanceUntilAny.html', attributes: []},
{name: 'std.experimental.xml.lexers.BufferedLexer.CharacterType', kind: "aliasdeclaration", path: './std/experimental/xml/lexers/BufferedLexer.CharacterType.html', attributes: []},
{name: 'std.experimental.xml.lexers.BufferedLexer.dropWhile', kind: "functiondeclaration", path: './std/experimental/xml/lexers/BufferedLexer.dropWhile.html', attributes: []},
{name: 'std.experimental.xml.lexers.BufferedLexer.empty', kind: "functiondeclaration", path: './std/experimental/xml/lexers/BufferedLexer.empty.html', attributes: []},
{name: 'std.experimental.xml.lexers.BufferedLexer.get', kind: "functiondeclaration", path: './std/experimental/xml/lexers/BufferedLexer.get.html', attributes: ["const"]},
{name: 'std.experimental.xml.lexers.BufferedLexer.InputType', kind: "aliasdeclaration", path: './std/experimental/xml/lexers/BufferedLexer.InputType.html', attributes: []},
{name: 'std.experimental.xml.lexers.BufferedLexer.setSource', kind: "functiondeclaration", path: './std/experimental/xml/lexers/BufferedLexer.setSource.html', attributes: []},
{name: 'std.experimental.xml.lexers.BufferedLexer.start', kind: "functiondeclaration", path: './std/experimental/xml/lexers/BufferedLexer.start.html', attributes: []},
{name: 'std.experimental.xml.lexers.BufferedLexer.testAndAdvance', kind: "functiondeclaration", path: './std/experimental/xml/lexers/BufferedLexer.testAndAdvance.html', attributes: []},
{name: 'std.experimental.xml.lexers.chooseLexer', kind: "functiondeclaration", path: './std/experimental/xml/lexers/chooseLexer.html', attributes: ["auto"]},
{name: 'std.experimental.xml.lexers.ForwardLexer', kind: "structdeclaration", path: './std/experimental/xml/lexers/ForwardLexer.html', attributes: []},
{name: 'std.experimental.xml.lexers.ForwardLexer.advanceUntil', kind: "functiondeclaration", path: './std/experimental/xml/lexers/ForwardLexer.advanceUntil.html', attributes: []},
{name: 'std.experimental.xml.lexers.ForwardLexer.advanceUntilAny', kind: "functiondeclaration", path: './std/experimental/xml/lexers/ForwardLexer.advanceUntilAny.html', attributes: []},
{name: 'std.experimental.xml.lexers.ForwardLexer.CharacterType', kind: "aliasdeclaration", path: './std/experimental/xml/lexers/ForwardLexer.CharacterType.html', attributes: []},
{name: 'std.experimental.xml.lexers.ForwardLexer.dropWhile', kind: "functiondeclaration", path: './std/experimental/xml/lexers/ForwardLexer.dropWhile.html', attributes: []},
{name: 'std.experimental.xml.lexers.ForwardLexer.empty', kind: "functiondeclaration", path: './std/experimental/xml/lexers/ForwardLexer.empty.html', attributes: ["const"]},
{name: 'std.experimental.xml.lexers.ForwardLexer.get', kind: "functiondeclaration", path: './std/experimental/xml/lexers/ForwardLexer.get.html', attributes: []},
{name: 'std.experimental.xml.lexers.ForwardLexer.InputType', kind: "aliasdeclaration", path: './std/experimental/xml/lexers/ForwardLexer.InputType.html', attributes: []},
{name: 'std.experimental.xml.lexers.ForwardLexer.start', kind: "functiondeclaration", path: './std/experimental/xml/lexers/ForwardLexer.start.html', attributes: []},
{name: 'std.experimental.xml.lexers.ForwardLexer.testAndAdvance', kind: "functiondeclaration", path: './std/experimental/xml/lexers/ForwardLexer.testAndAdvance.html', attributes: []},
{name: 'std.experimental.xml.lexers.RangeLexer', kind: "structdeclaration", path: './std/experimental/xml/lexers/RangeLexer.html', attributes: []},
{name: 'std.experimental.xml.lexers.RangeLexer.advanceUntil', kind: "functiondeclaration", path: './std/experimental/xml/lexers/RangeLexer.advanceUntil.html', attributes: []},
{name: 'std.experimental.xml.lexers.RangeLexer.advanceUntilAny', kind: "functiondeclaration", path: './std/experimental/xml/lexers/RangeLexer.advanceUntilAny.html', attributes: []},
{name: 'std.experimental.xml.lexers.RangeLexer.CharacterType', kind: "aliasdeclaration", path: './std/experimental/xml/lexers/RangeLexer.CharacterType.html', attributes: []},
{name: 'std.experimental.xml.lexers.RangeLexer.dropWhile', kind: "functiondeclaration", path: './std/experimental/xml/lexers/RangeLexer.dropWhile.html', attributes: []},
{name: 'std.experimental.xml.lexers.RangeLexer.empty', kind: "functiondeclaration", path: './std/experimental/xml/lexers/RangeLexer.empty.html', attributes: ["const"]},
{name: 'std.experimental.xml.lexers.RangeLexer.get', kind: "functiondeclaration", path: './std/experimental/xml/lexers/RangeLexer.get.html', attributes: ["const"]},
{name: 'std.experimental.xml.lexers.RangeLexer.InputType', kind: "aliasdeclaration", path: './std/experimental/xml/lexers/RangeLexer.InputType.html', attributes: []},
{name: 'std.experimental.xml.lexers.RangeLexer.start', kind: "functiondeclaration", path: './std/experimental/xml/lexers/RangeLexer.start.html', attributes: []},
{name: 'std.experimental.xml.lexers.RangeLexer.testAndAdvance', kind: "functiondeclaration", path: './std/experimental/xml/lexers/RangeLexer.testAndAdvance.html', attributes: []},
{name: 'std.experimental.xml.lexers.SliceLexer', kind: "structdeclaration", path: './std/experimental/xml/lexers/SliceLexer.html', attributes: []},
{name: 'std.experimental.xml.lexers.SliceLexer.advanceUntil', kind: "functiondeclaration", path: './std/experimental/xml/lexers/SliceLexer.advanceUntil.html', attributes: []},
{name: 'std.experimental.xml.lexers.SliceLexer.advanceUntilAny', kind: "functiondeclaration", path: './std/experimental/xml/lexers/SliceLexer.advanceUntilAny.html', attributes: []},
{name: 'std.experimental.xml.lexers.SliceLexer.CharacterType', kind: "aliasdeclaration", path: './std/experimental/xml/lexers/SliceLexer.CharacterType.html', attributes: []},
{name: 'std.experimental.xml.lexers.SliceLexer.dropWhile', kind: "functiondeclaration", path: './std/experimental/xml/lexers/SliceLexer.dropWhile.html', attributes: []},
{name: 'std.experimental.xml.lexers.SliceLexer.empty', kind: "functiondeclaration", path: './std/experimental/xml/lexers/SliceLexer.empty.html', attributes: ["const", "auto"]},
{name: 'std.experimental.xml.lexers.SliceLexer.get', kind: "functiondeclaration", path: './std/experimental/xml/lexers/SliceLexer.get.html', attributes: ["const"]},
{name: 'std.experimental.xml.lexers.SliceLexer.InputType', kind: "aliasdeclaration", path: './std/experimental/xml/lexers/SliceLexer.InputType.html', attributes: []},
{name: 'std.experimental.xml.lexers.SliceLexer.setSource', kind: "functiondeclaration", path: './std/experimental/xml/lexers/SliceLexer.setSource.html', attributes: []},
{name: 'std.experimental.xml.lexers.SliceLexer.start', kind: "functiondeclaration", path: './std/experimental/xml/lexers/SliceLexer.start.html', attributes: []},
{name: 'std.experimental.xml.lexers.SliceLexer.testAndAdvance', kind: "functiondeclaration", path: './std/experimental/xml/lexers/SliceLexer.testAndAdvance.html', attributes: []},
{name: 'std.experimental.xml.parser', kind: "module", path: './std/experimental/xml/parser.html', attributes: []},
{name: 'std.experimental.xml.parser.chooseParser', kind: "functiondeclaration", path: './std/experimental/xml/parser/chooseParser.html', attributes: ["auto"]},
{name: 'std.experimental.xml.parser.Parser', kind: "structdeclaration", path: './std/experimental/xml/parser/Parser.html', attributes: []},
{name: 'std.experimental.xml.parser.Parser.empty', kind: "functiondeclaration", path: './std/experimental/xml/parser/Parser.empty.html', attributes: []},
{name: 'std.experimental.xml.parser.Parser.front', kind: "functiondeclaration", path: './std/experimental/xml/parser/Parser.front.html', attributes: ["auto"]},
{name: 'std.experimental.xml.parser.Parser.popFront', kind: "functiondeclaration", path: './std/experimental/xml/parser/Parser.popFront.html', attributes: []},
{name: 'std.experimental.xml.parser.Parser.this', kind: "functiondeclaration", path: './std/experimental/xml/parser/Parser.this.html', attributes: []},
{name: 'std.experimental.xml.parser.Parser.XMLToken', kind: "structdeclaration", path: './std/experimental/xml/parser/Parser.XMLToken.html', attributes: []},
{name: 'std.experimental.xml.parser.Parser.XMLToken.content', kind: "variabledeclaration", path: './std/experimental/xml/parser/Parser.XMLToken.content.html', attributes: []},
{name: 'std.experimental.xml.parser.Parser.XMLToken.kind', kind: "variabledeclaration", path: './std/experimental/xml/parser/Parser.XMLToken.kind.html', attributes: []},
{name: 'std.experimental.xml.parser.parser', kind: "functiondeclaration", path: './std/experimental/xml/parser/parser.html', attributes: ["auto"]},
{name: 'std.experimental.xml.sax', kind: "module", path: './std/experimental/xml/sax.html', attributes: []},
{name: 'std.experimental.xml.sax.SAXParser', kind: "structdeclaration", path: './std/experimental/xml/sax/SAXParser.html', attributes: []},
{name: 'std.experimental.xml.sax.SAXParser.processDocument', kind: "functiondeclaration", path: './std/experimental/xml/sax/SAXParser.processDocument.html', attributes: []},
{name: 'std.experimental.xml.sax.SAXParser.setSource', kind: "functiondeclaration", path: './std/experimental/xml/sax/SAXParser.setSource.html', attributes: []},
{name: 'std.experimental.xml.sax.saxParser', kind: "functiondeclaration", path: './std/experimental/xml/sax/saxParser.html', attributes: ["auto"]},
{name: 'std.experimental.xml.validation', kind: "module", path: './std/experimental/xml/validation.html', attributes: []},
{name: 'std.experimental.xml.validation.CheckXMLNames', kind: "structdeclaration", path: './std/experimental/xml/validation/CheckXMLNames.html', attributes: []},
{name: 'std.experimental.xml.validation.checkXMLNames', kind: "functiondeclaration", path: './std/experimental/xml/validation/checkXMLNames.html', attributes: ["auto"]},
{name: 'std.experimental.xml.validation.ElementNestingValidator', kind: "structdeclaration", path: './std/experimental/xml/validation/ElementNestingValidator.html', attributes: []},
{name: 'std.experimental.xml.validation.elementNestingValidator', kind: "functiondeclaration", path: './std/experimental/xml/validation/elementNestingValidator.html', attributes: ["auto"]},
{name: 'std.experimental.xml.validation.isValidXMLCharacter10', kind: "functiondeclaration", path: './std/experimental/xml/validation/isValidXMLCharacter10.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.experimental.xml.validation.isValidXMLCharacter11', kind: "functiondeclaration", path: './std/experimental/xml/validation/isValidXMLCharacter11.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.experimental.xml.validation.isValidXMLNameChar', kind: "functiondeclaration", path: './std/experimental/xml/validation/isValidXMLNameChar.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.experimental.xml.validation.isValidXMLNameStart', kind: "functiondeclaration", path: './std/experimental/xml/validation/isValidXMLNameStart.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.experimental.xml.validation.isValidXMLPublicIdCharacter', kind: "functiondeclaration", path: './std/experimental/xml/validation/isValidXMLPublicIdCharacter.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.experimental.xml.writer', kind: "module", path: './std/experimental/xml/writer.html', attributes: []},
{name: 'std.experimental.xml.writer.CheckedWriter', kind: "structdeclaration", path: './std/experimental/xml/writer/CheckedWriter.html', attributes: []},
{name: 'std.experimental.xml.writer.PrettyPrinters', kind: "structdeclaration", path: './std/experimental/xml/writer/PrettyPrinters.html', attributes: []},
{name: 'std.experimental.xml.writer.PrettyPrinters.Indenter', kind: "structdeclaration", path: './std/experimental/xml/writer/PrettyPrinters.Indenter.html', attributes: []},
{name: 'std.experimental.xml.writer.PrettyPrinters.Minimalizer', kind: "structdeclaration", path: './std/experimental/xml/writer/PrettyPrinters.Minimalizer.html', attributes: []},
{name: 'std.experimental.xml.writer.withValidation', kind: "templatedeclaration", path: './std/experimental/xml/writer/withValidation.html', attributes: []},
{name: 'std.experimental.xml.writer.withValidation.withValidation', kind: "functiondeclaration", path: './std/experimental/xml/writer/withValidation.withValidation.html', attributes: ["auto"]},
{name: 'std.experimental.xml.writer.writeCursor', kind: "functiondeclaration", path: './std/experimental/xml/writer/writeCursor.html', attributes: ["auto"]},
{name: 'std.experimental.xml.writer.writeDOM', kind: "functiondeclaration", path: './std/experimental/xml/writer/writeDOM.html', attributes: []},
{name: 'std.experimental.xml.writer.Writer', kind: "structdeclaration", path: './std/experimental/xml/writer/Writer.html', attributes: []},
{name: 'std.experimental.xml.writer.Writer.writeCDATA', kind: "functiondeclaration", path: './std/experimental/xml/writer/Writer.writeCDATA.html', attributes: []},
{name: 'std.experimental.xml.writer.Writer.writeComment', kind: "functiondeclaration", path: './std/experimental/xml/writer/Writer.writeComment.html', attributes: []},
{name: 'std.experimental.xml.writer.Writer.writeProcessingInstruction', kind: "functiondeclaration", path: './std/experimental/xml/writer/Writer.writeProcessingInstruction.html', attributes: []},
{name: 'std.experimental.xml.writer.Writer.writeText', kind: "functiondeclaration", path: './std/experimental/xml/writer/Writer.writeText.html', attributes: []},
{name: 'std.experimental.xml.writer.Writer.writeXMLDeclaration', kind: "functiondeclaration", path: './std/experimental/xml/writer/Writer.writeXMLDeclaration.html', attributes: []},
{name: 'std.experimental.xml.writer.writerFor', kind: "functiondeclaration", path: './std/experimental/xml/writer/writerFor.html', attributes: ["auto"]},
{name: 'std.experimental.xml', kind: "module", path: './std/experimental/xml.html', attributes: []},
];
