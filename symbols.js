// symbol index generated by DDOX - do not edit
var symbols = [
{name: 'std.experimental.xml.dom', kind: "module", path: './std/experimental/xml/dom.html', attributes: []},
{name: 'std.experimental.xml.faststrings', kind: "module", path: './std/experimental/xml/faststrings.html', attributes: []},
{name: 'std.experimental.xml.faststrings.fastEqual', kind: "functiondeclaration", path: './std/experimental/xml/faststrings/fastEqual.html', attributes: ["pure", "nothrow", "nogc"]},
{name: 'std.experimental.xml.faststrings.fastIndexOf', kind: "functiondeclaration", path: './std/experimental/xml/faststrings/fastIndexOf.html', attributes: ["pure", "nothrow", "nogc"]},
{name: 'std.experimental.xml.faststrings.fastIndexOfAny', kind: "functiondeclaration", path: './std/experimental/xml/faststrings/fastIndexOfAny.html', attributes: ["pure", "nothrow", "nogc"]},
{name: 'std.experimental.xml.faststrings.fastIndexOfNeither', kind: "functiondeclaration", path: './std/experimental/xml/faststrings/fastIndexOfNeither.html', attributes: ["pure", "nothrow", "nogc"]},
{name: 'std.experimental.xml.interfaces', kind: "module", path: './std/experimental/xml/interfaces.html', attributes: []},
{name: 'std.experimental.xml.interfaces.isLexer', kind: "enummemberdeclaration", path: './std/experimental/xml/interfaces/isLexer.html', attributes: []},
{name: 'std.experimental.xml.interfaces.isLowLevelParser', kind: "enummemberdeclaration", path: './std/experimental/xml/interfaces/isLowLevelParser.html', attributes: []},
{name: 'std.experimental.xml.interfaces.isSaveableLexer', kind: "enummemberdeclaration", path: './std/experimental/xml/interfaces/isSaveableLexer.html', attributes: []},
{name: 'std.experimental.xml.interfaces.isSaveableLowLevelParser', kind: "enummemberdeclaration", path: './std/experimental/xml/interfaces/isSaveableLowLevelParser.html', attributes: []},
{name: 'std.experimental.xml.interfaces.XMLKind', kind: "enumdeclaration", path: './std/experimental/xml/interfaces/XMLKind.html', attributes: []},
{name: 'std.experimental.xml.interfaces.XMLKind.ATTLIST_DECL', kind: "enummemberdeclaration", path: './std/experimental/xml/interfaces/XMLKind.ATTLIST_DECL.html', attributes: []},
{name: 'std.experimental.xml.interfaces.XMLKind.CDATA', kind: "enummemberdeclaration", path: './std/experimental/xml/interfaces/XMLKind.CDATA.html', attributes: []},
{name: 'std.experimental.xml.interfaces.XMLKind.COMMENT', kind: "enummemberdeclaration", path: './std/experimental/xml/interfaces/XMLKind.COMMENT.html', attributes: []},
{name: 'std.experimental.xml.interfaces.XMLKind.CONDITIONAL', kind: "enummemberdeclaration", path: './std/experimental/xml/interfaces/XMLKind.CONDITIONAL.html', attributes: []},
{name: 'std.experimental.xml.interfaces.XMLKind.DECLARATION', kind: "enummemberdeclaration", path: './std/experimental/xml/interfaces/XMLKind.DECLARATION.html', attributes: []},
{name: 'std.experimental.xml.interfaces.XMLKind.DOCTYPE', kind: "enummemberdeclaration", path: './std/experimental/xml/interfaces/XMLKind.DOCTYPE.html', attributes: []},
{name: 'std.experimental.xml.interfaces.XMLKind.DOCUMENT', kind: "enummemberdeclaration", path: './std/experimental/xml/interfaces/XMLKind.DOCUMENT.html', attributes: []},
{name: 'std.experimental.xml.interfaces.XMLKind.ELEMENT_DECL', kind: "enummemberdeclaration", path: './std/experimental/xml/interfaces/XMLKind.ELEMENT_DECL.html', attributes: []},
{name: 'std.experimental.xml.interfaces.XMLKind.ELEMENT_EMPTY', kind: "enummemberdeclaration", path: './std/experimental/xml/interfaces/XMLKind.ELEMENT_EMPTY.html', attributes: []},
{name: 'std.experimental.xml.interfaces.XMLKind.ELEMENT_END', kind: "enummemberdeclaration", path: './std/experimental/xml/interfaces/XMLKind.ELEMENT_END.html', attributes: []},
{name: 'std.experimental.xml.interfaces.XMLKind.ELEMENT_START', kind: "enummemberdeclaration", path: './std/experimental/xml/interfaces/XMLKind.ELEMENT_START.html', attributes: []},
{name: 'std.experimental.xml.interfaces.XMLKind.ENTITY_DECL', kind: "enummemberdeclaration", path: './std/experimental/xml/interfaces/XMLKind.ENTITY_DECL.html', attributes: []},
{name: 'std.experimental.xml.interfaces.XMLKind.NOTATION_DECL', kind: "enummemberdeclaration", path: './std/experimental/xml/interfaces/XMLKind.NOTATION_DECL.html', attributes: []},
{name: 'std.experimental.xml.interfaces.XMLKind.PROCESSING_INSTRUCTION', kind: "enummemberdeclaration", path: './std/experimental/xml/interfaces/XMLKind.PROCESSING_INSTRUCTION.html', attributes: []},
{name: 'std.experimental.xml.interfaces.XMLKind.TEXT', kind: "enummemberdeclaration", path: './std/experimental/xml/interfaces/XMLKind.TEXT.html', attributes: []},
{name: 'std.experimental.xml.interfaces.XMLToken', kind: "structdeclaration", path: './std/experimental/xml/interfaces/XMLToken.html', attributes: []},
{name: 'std.experimental.xml.interfaces.XMLToken.content', kind: "variabledeclaration", path: './std/experimental/xml/interfaces/XMLToken.content.html', attributes: []},
{name: 'std.experimental.xml.interfaces.XMLToken.kind', kind: "variabledeclaration", path: './std/experimental/xml/interfaces/XMLToken.kind.html', attributes: []},
{name: 'std.experimental.xml.legacy', kind: "module", path: './std/experimental/xml/legacy.html', attributes: []},
{name: 'std.experimental.xml.lexers', kind: "module", path: './std/experimental/xml/lexers.html', attributes: []},
{name: 'std.experimental.xml.lexers.RangeLexer', kind: "structdeclaration", path: './std/experimental/xml/lexers/RangeLexer.html', attributes: []},
{name: 'std.experimental.xml.lexers.SliceLexer', kind: "structdeclaration", path: './std/experimental/xml/lexers/SliceLexer.html', attributes: []},
{name: 'std.experimental.xml.parser', kind: "module", path: './std/experimental/xml/parser.html', attributes: []},
];
